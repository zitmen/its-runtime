/*
This is example of Garbage Collection.
Print text, alloc 32MB (it will exceed the heap and trigger the GC), then print text again for reference update check.
The text is placed inside of structure and array for a purpose - to demonstrate that reference updating works fine.

Run:
./compiler garbage_collector.ctalk garbage_collector.run
./virtual-machine -heap=32M -gc=0.9 garbage_collector.run

*/
struct Text
{
	Array<String> text;
}

void main()
{
	Text text = new;
	text.text = new[4];
	text.text[0] = "Byl ";
	text.text[1] = "jsem ";
	text.text[2] = "tu, ";
	text.text[3] = "Fantomas.";
	
	Array<int> arr;

	for(int t = 0; t < 4; t++)
		print(text.text[t]);
	println("");
	//
	for(int i = 0; i < 8; i++)	// 32MB in total
		arr = new[1024*1024];	// 8x4MB
	//
	for(int t = 0; t < 4; t++)
		print(text.text[t]);
	println("");
}